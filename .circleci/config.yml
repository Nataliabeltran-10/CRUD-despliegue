version: 2.1

jobs:
  test:
    docker:
      - image: circleci/node:16
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Instalar dependencias
          command: npm install
      - run:
          name: Instalar Jest globalmente
          command: sudo npm install -g jest
      - run:
          name: Verificar instalación de Jest
          command: npx jest --version
      - run:
          name: Ejecutar pruebas
          command: npm test

  delivery:
    docker:
      - image: circleci/node:16
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Notificar sobre el estado del build
          command: echo "Las pruebas han pasado. Listo para entrega."
      - run:
          name: Enviar notificación (Slack, Email, etc.)
          command: |
            if [ -n "$SLACK_WEBHOOK_URL" ]; then
              curl -X POST -H 'Content-type: application/json' --data '{"text":"El build está listo para ser desplegado."}' "$SLACK_WEBHOOK_URL"
            else
              echo "SLACK_WEBHOOK_URL no está definido, omitiendo notificación."
            fi

    deploy:
    docker:
      - image: circleci/node:16
    working_directory: ~/repo
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "TU_FINGERPRINT_SSH"
      - run:
          name: Instalar rsync y SSH
          command: sudo apt-get update && sudo apt-get install -y rsync ssh
      - run:
          name: Crear script de despliegue
          command: |
            echo '#!/bin/bash
            set -e
            echo "Iniciando despliegue..."
            rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" ./ usuario@servidor:/ruta/destino
            ssh -o StrictHostKeyChecking=no usuario@servidor "cd /ruta/destino && ./restart.sh"
            echo "Despliegue completado con éxito."' > deploy.sh
            chmod +x deploy.sh
      - run:
          name: Ejecutar despliegue
          command: ./deploy.sh


workflows:
  version: 2
  build_test_deploy:
    jobs:
      - test
      - delivery:
          requires:
            - test
      - deploy:
          requires:
            - delivery
