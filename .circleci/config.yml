version: 2.1

jobs:
  test:
    docker:
      - image: circleci/node:16  
    working_directory: ~/repo  
    steps:
      - checkout  
      - run:
          name: Instalar dependencias
          command: npm install  
      - run:
          name: Instalar Jest globalmente
          command: sudo npm install -g jest  
      - run:
          name: Verificar instalación de Jest
          command: npx jest --version  
      - run:
          name: Ejecutar pruebas
          command: npm test 

  delivery:
    docker:
      - image: circleci/node:16
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Notificar sobre el estado del build
          command: echo "Las pruebas han pasado. Listo para entrega."
      - run:
          name: Enviar notificación (Slack, Email, etc.)
          command: |
            if [ -n "$SLACK_WEBHOOK_URL" ]; then
              curl -X POST -H 'Content-type: application/json' --data '{"text":"El build está listo para ser desplegado."}' "$SLACK_WEBHOOK_URL"
            else
              echo "SLACK_WEBHOOK_URL no está definido, omitiendo notificación."
            fi

  deploy:
    docker:
      - image: circleci/node:16
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Configurar clave privada SSH
          command: |
            mkdir -p ~/.ssh
            echo -e "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa

      - run:
          name: Agregar el host al archivo known_hosts
          command: |
            ssh-keyscan -H "$SERVER_HOST" >> ~/.ssh/known_hosts

      - run:
          name: Verificar conexión SSH
          command: |
            ssh -o StrictHostKeyChecking=no $SSH_USER@$SERVER_HOST "echo 'Conexión SSH exitosa'"

      - run:
          name: Desplegar aplicación
          command: |
            ssh $SSH_USER@$SERVER_HOST "cd /ruta/del/proyecto && git pull origin main && npm install && pm2 restart app"

      - run:
          name: Notificar despliegue exitoso
          command: |
            if [ -n "$SLACK_WEBHOOK_URL" ]; then
              curl -X POST -H 'Content-type: application/json' --data '{"text":"Despliegue exitoso en producción."}' "$SLACK_WEBHOOK_URL"
            fi

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - test
      - delivery:
          requires:
            - test
      - deploy:
          requires:
            - delivery
          filters:
            branches:
              only: main
